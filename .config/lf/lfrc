# =======================================================================
# ================================ options ==============================
# =======================================================================

# interpreter for shell commands (needs to be POSIX compatible)
set shell zsh

set shellopts '-eu:--shwordsplit'

set ifs "\n"
set filesep "\n"  # default already

set scrolloff 10
set incsearch
set color256
set icons


# =======================================================================
# ================================ commands =============================
# =======================================================================

# define a custom 'open' command
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
cmd trash %trash-put $fx

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd mkdir %mkdir -p $1
cmd touch %touch $1

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd fzf_jump ${{
   export FZF_DEFAULT_COMMAND='fd --type directory --follow --exclude .git --color=always --hidden' 
   res="$(fzf)"
   export FZF_DEFAULT_COMMAND='fd --type file --follow --exclude .git --color=always --hidden'
   cmd="cd"                                                       
lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_open ${{
   res="$(fzf)"
   cmd=""
   if [ -n "$res" ]; then
      cmd="nvim"
      lf -remote "send $id $cmd \"$res\""
   else
      cmd=""
   fi
}}

cmd fzf_jump_files ${{
   res="$(fzf)"
   cmd="select"
   lf -remote "send $id $cmd \"$res\""
}}

# =======================================================================
# ================================ mappings =============================
# =======================================================================

map <c-e> :fzf_jump
map <c-p> :fzf_open
map <c-t> :fzf_jump_files

# export FZF_DEFAULT_COMMAND="fd --type file --follow --exclude .git --color=always --hidden"

map . set hidden!
map gh :cd ~


map a push :touch<space>
map A push :mkdir<space>

map D trash
map <delete> delete
map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f
